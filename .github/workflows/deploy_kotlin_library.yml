name: Create Release and Deploy library to GitHub Packages

on:
  pull_request:
    branches: [main]
    types:
      - closed

jobs:
  publish:
    name: Create Release
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    permissions:
      contents: write
      deployments: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Major version
        run: |
          echo "VERSION_INCREMENT=major" >> $GITHUB_ENV
        if: startsWith(github.event.pull_request.title, 'Major')

      - name: Check if Minor version
        run: |
          echo "VERSION_INCREMENT=minor" >> $GITHUB_ENV
        if: startsWith(github.event.pull_request.title, 'Minor')

      - name: Check if Patch version
        run: |
          echo "VERSION_INCREMENT=patch" >> $GITHUB_ENV
        if: startsWith(github.event.pull_request.title, 'Patch')

      - name: Set next version
        uses: MCKanpolat/auto-semver-action@v2
        id: version
        with:
          releaseType: ${{ env.VERSION_INCREMENT }}
          incrementPerCommit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
        env:
          GITHUB_REPOSITORY: santukis/ca-foundation

      - name: Set up Java Sdk 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Build libraries
        run: ./gradlew :data:datasource:remote:assemble :data:repository:assemble :domain:assemble :injection:core:assembleRelease :injection:koin-provider:assembleRelease :ui:navigation:assembleRelease :ui:theme:assembleRelease :ui:components:assembleRelease

      - name: Publish package
        uses: gradle/actions/setup-gradle@v3
        run: ./gradlew publish

        env:
          GITHUB_VERSION: ${{ steps.version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
